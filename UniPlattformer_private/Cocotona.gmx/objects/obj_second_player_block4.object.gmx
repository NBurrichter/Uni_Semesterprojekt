<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block_4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables
crumbling = false;
decay_time = 0.1;
transparency = 1;

//Changeable variables

//---Blocks---
//4sideways moveing
started = false;
move_speed = 5;
time = 100;
timer = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moving block
if (place_meeting(x,y-1,obj_player) /*or place_meeting(x+1,y,obj_player) or place_meeting(x-1,y,obj_player)*/) and !started
    then
    {
    if obj_player.dir = 1
        then
        {
        hspeed = move_speed;
        started = true;
        timer = time;
        }
    if obj_player.dir = -1
        then
        {
        hspeed = -move_speed;
        started = true;
        timer = time;
        }
    }

if timer &gt; 0 
    then
    {
    timer--;
    }    
    
if timer = 0
    then
    {
    instance_destroy();
    }    
    
if place_meeting(x+hspeed,y,obj_parent_collision) or place_meeting(x+hspeed,y,obj_player)
    then
    {
    hspeed = -hspeed;
    }    
    
var collision1 = instance_place(x,y-1,obj_player);

with (collision1) 
    {
    if !keyboard_check(ord('A')) and !keyboard_check(ord('D'))
        then
        {
        h_speed = other.hspeed
        }
    }

var collision2 = instance_place(x+1,y,obj_player);      

with (collision2) 
    {
    if !hit
        then
        {
        h_speed = other.hspeed
        }
    }
    
var collision3 = instance_place(x-1,y,obj_player);      

with (collision3) 
    {
    if !hit
        then
        {
        h_speed = other.hspeed
        }
    }

///Mario block destruction

if place_meeting(x,y+1,obj_player) 
    then
    {  
    for(var i = 0; i &lt; 4; i++)
        {
        particle = instance_create(x, y, obj_second_player_block_particle);
        with (particle)
            {
            sprite_index = spr_block_4_part;
            direction = 45 + i*90;
            speed = abs(obj_player.v_speed);
            }
        }
    if obj_player.v_speed &lt; 0
        then
        {
        obj_player.v_speed = 0;
        }                                
    instance_destroy ();    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !started
    then
    {
    draw_sprite_ext(spr_block_4,-1,x,y,1,1,0,c_white,1);
    }
    else
    {
    draw_sprite_ext(spr_block_4,-1,x,y,1,1,0,c_white,timer/time);  
    }
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
