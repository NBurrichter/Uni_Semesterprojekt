<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flapping_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_damage_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//defining variables
 
speed = 4;

direction = image_angle;

distance = 128;

startx = x;
starty = y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

///Movement

//reset speed each step

h_speed = real_speed;
v_speed = real_speed;

//actual horizontal movement with collision
     
for(i = 1; i&lt;abs(v_spd); i++) 
    {
    move_check = i*sign(v_spd)
    if place_meeting(x,y + move_check,obj_parent_collision) 
        {
        v_spd = -v_spd/2;
        } 
    else 
    {
    with (obj_parent_movement)
        {
        y -= other.move_check;      
        }
    }
    }             
     
     
     
     /*
for (i = 0; i &lt; h_speed; i += 1)
    {
    
        
repeat abs(real_speed) 
    {
    if !place_meeting(x + i*(sign(h_speed)), y, obj_parent_collision)
        {
        h_speed += 1;            
        }
    else
        {
        h_speed
        }
         
    

//actual vertical movement with collision

repeat abs(v_speed)  
    {
    if place_meeting(x, y + v_speed, obj_parent_collision)
            then
            {
            v_speed -= 1*(sign(v_speed));  
            }
        }

//turn 180Â° when end of path is reached

if distance_to_point(startx,starty) &gt; distance 
    then
    {
    speed *= -1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
