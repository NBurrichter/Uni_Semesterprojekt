<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playertwo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

depth = -10000000;

selectMode = false;
mousePointer = 0;
mouseArea = 0;
hudTimer = 0;
hudTimerInc = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Selectmode: Wechsel zwische Auswahlrad und normaler bewegung
if mouse_check_button_pressed(mb_right)
    then
    {
    selectMode = true;
    hudTimer = 0;
    }

//Bestimmen der Position der Mouse in relation zum zweiten Spieler sprite
if selectMode{
mousePointer = point_direction(x, y, mouse_x, mouse_y);//Bestimmt per Gradzahl, in welchem quadranten sich die maus befindet
//up
if mousePointer &gt; 45 and mousePointer &lt; 135
    then
    {
    mouseArea = 0;
    }
//right
if (mousePointer &gt; 0 and mousePointer &lt; 45) or (mousePointer &gt; 315 and mousePointer &lt; 360)
    then
    {
    mouseArea = 1;
    }
//down
if mousePointer &gt; 255 and mousePointer &lt; 315
    then
    {
    mouseArea = 2;
    }
//left
if mousePointer &gt; 135 and mousePointer &lt; 255
    then
    {
    mouseArea = 3;
    }    
}
 
//Beenden des select Modes 
if mouse_check_button_released(mb_right)
    then
    {     
    selectMode = false;
    }
         
///mouse_position in grid - moves only if not in select mode    
if !selectMode then
    {
    x = floor(mouse_x/16)*16;
    y = floor(mouse_y/16)*16;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create up to 9 blocks

if !place_meeting (x,y,obj_parent_block)
    then
    {
    block = instance_create (x,y,obj_second_player_block);
    block.type = mouseArea;
    }

if instance_number (obj_second_player_block) &gt; 9
    then
    {
    with (instance_find(obj_second_player_block, 0))
        {
        instance_destroy();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//Hud creation Timer
if hudTimer &lt; 1
    then
    {
    hudTimer += hudTimerInc;
    }

//Max Hud cretion time
if hudTimer &gt; 1
    then   
    {
    hudTimer = 1;
    }

//Drawing des select HUDs
if selectMode
    then
    {
    for (i = 0; i &lt; 4; i += 1)
       {
       draw_sprite_ext(spr_block_select,0,x,y,1*hudTimer,1*hudTimer,i*90,-1,1);
       }    
//Drawing des ausgew√§hlten blockes   
     switch (mouseArea)
       {
       case 0: draw_sprite_ext(spr_block_select,1,x,y,1*hudTimer,1*hudTimer,0,-1,1) break;
       case 1: draw_sprite_ext(spr_block_select,1,x,y,1*hudTimer,1*hudTimer,270,-1,1) break;
       case 2: draw_sprite_ext(spr_block_select,1,x,y,1*hudTimer,1*hudTimer,180,-1,1) break;
       case 3: draw_sprite_ext(spr_block_select,1,x,y,1*hudTimer,1*hudTimer,90,-1,1) break;
       }
    }

//Debug
/*
draw_text (x,y+20,"Pointer: "+string(mousePointer));
draw_text (x,y+30,"Mouse Area: "+string(mouseArea));
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
