<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialze variables

global.screen_shake = 0;

point_of_interest = obj_player;

x = point_of_interest.x;
y = point_of_interest.y;

view_object = obj_camera_controller;

view_hborder = view_wview/4;
view_vborder = view_hview/3;

//////////////
/*
h_dist = 300;
v_dist = 64;

x = point_of_interest.x + h_dist;
y = point_of_interest.y + v_dist;

camera_speed = 15;

/*
point_of_interest = obj_player;

x = point_of_interest.x;
y = point_of_interest.y;

horizontal_border = 300;
vertical_border = 200;

view_object = obj_camera_controller;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
///Move Camera

//by default, look far in the direction the player is facing and slightly upward

if instance_exists (point_of_interest)
    then
    {
    move_to_x = point_of_interest.x + h_dist * point_of_interest.dir;
    move_to_y = point_of_interest.y + v_dist;
    }

//*

//if we're standing in front of a tall wall, only look forward a bit and up much higher
if place_meeting(x+face,y-peek,par_solid) 
    {
    cam.xTo = x + face*peek;
    cam.yTo = y - v_dist*3;
    }


//if we're standing on a ledge, look forward only a bit and far down
if !place_meeting(x+(face*peek),y+1,par_solid) &amp;&amp; !place_meeting(x+(face*peek),y+peek,par_solid) &amp;&amp; (grd) 
    {
    cam.xTo = x + face*peek;
    cam.yTo = y + v_dist*2;
    }   

//move the camera
x += (move_to_x - x)/camera_speed;
y += (move_to_y - y)/camera_speed;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moving camera

x = point_of_interest.x;
y = point_of_interest.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax scrolling

background_x[0] = view_xview[0];
background_y[0] = view_yview[0];

background_x[1] = view_xview[0]/2;
background_y[1] = view_yview[0]/2;

background_x[2] = view_xview[0]/3;
background_y[2] = view_yview[0]/3;

background_x[3] = view_xview[0]/4;
background_y[3] = view_yview[0]/4;

background_x[4] = view_xview[0]/5;
background_y[4] = view_yview[0]/5;

background_x[5] = view_xview[0]/6;
background_y[5] = view_yview[0]/6;

background_x[6] = view_xview[0]/7;
background_y[6] = view_yview[0]/7;

background_x[7] = view_xview[0]/8;
background_y[7] = view_yview[0]/8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debugging
/*
draw_text (x,y+0,"h_speed: "+string(point_of_interest.h_speed));
draw_text (x,y+15,"v_speed: "+string(point_of_interest.v_speed));

draw_text (x,y+30,"left_side: "+string(max(horizontal_border, x-horizontal_border)));
draw_text (x,y+45,"top_side: "+string(max(vertical_border, y-vertical_border)));

draw_text (x,y+60,"camera.x: "+string(x));
draw_text (x,y+75,"camera.y: "+string(y));

draw_text (x,y+95,"screen_shake: "+string(global.screen_shake));

draw_set_color (c_white);
draw_rectangle (horizontal_border, vertical_border, room_width-horizontal_border, room_height-vertical_border, true );

draw_set_colour(c_red);

var left_side = max(horizontal_border, x-horizontal_border);
    var top_side = max(vertical_border, y-vertical_border);
    var right_side = min(room_width-horizontal_border, x+horizontal_border);
    var bottom_side = min (room_height-vertical_border, y+vertical_border);   

draw_rectangle ( x-horizontal_border, y-vertical_border, x+horizontal_border, y+vertical_border, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
